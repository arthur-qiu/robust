import numpy as np

def gaussian_2d_kernel(kernel_size=3, sigma=0):
    kernel = np.zeros([kernel_size, kernel_size])
    center = kernel_size // 2

    if sigma == 0:
        sigma = ((kernel_size - 1) * 0.5 - 1) * 0.3 + 0.8

    s = 2 * (sigma ** 2)
    sum_val = 0
    for i in range(0, kernel_size):
        for j in range(0, kernel_size):
            x = i - center
            y = j - center
            kernel[i, j] = np.exp(-(x ** 2 + y ** 2) / s)
            sum_val += kernel[i, j]
            # /(np.pi * s)
    sum_val = 1 / sum_val
    return kernel * sum_val

print(gaussian_2d_kernel(5, 2))

# filter_weight = torch.Tensor([[0.07511361, 0.1238414, 0.07511361],
#                               [0.1238414, 0.20417996, 0.1238414],
#                               [0.07511361, 0.1238414, 0.07511361]])

# filter_weight = torch.Tensor([[0.00296902, 0.01330621, 0.02193823, 0.01330621, 0.00296902],
#                              [0.01330621, 0.0596343,  0.09832033, 0.0596343,  0.01330621],
#                              [0.02193823, 0.09832033, 0.16210282, 0.09832033, 0.02193823],
#                              [0.01330621, 0.0596343,  0.09832033, 0.0596343,  0.01330621],
#                              [0.00296902, 0.01330621, 0.02193823, 0.01330621, 0.00296902]])

# filter_weight = torch.Tensor([[0.00048091, 0.00501119, 0.01094545, 0.00501119, 0.00048091],
#                              [0.00501119, 0.0522178,  0.11405416, 0.0522178,  0.00501119],
#                              [0.01094545, 0.11405416, 0.2491172,  0.11405416, 0.01094545],
#                              [0.00501119, 0.0522178,  0.11405416, 0.0522178,  0.00501119],
#                              [0.00048091, 0.00501119, 0.01094545, 0.00501119, 0.00048091]])

# filter_weight = torch.Tensor([[0.02324684,0.03382395,0.03832756,0.03382395,0.02324684],
#                              [0.03382395,0.04921356,0.05576627,0.04921356,0.03382395],
#                              [0.03832756,0.05576627,0.06319146,0.05576627,0.03832756],
#                              [0.03382395,0.04921356,0.05576627,0.04921356,0.03382395],
#                              [0.02324684,0.03382395,0.03832756,0.03382395,0.02324684]])